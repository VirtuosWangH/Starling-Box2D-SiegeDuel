package EasyBox2D.objects{		import flash.display.DisplayObject;	import flash.display.Sprite;		import Box2D.Collision.Shapes.b2PolygonShape;	import Box2D.Dynamics.b2Body;	import Box2D.Dynamics.b2BodyDef;	import Box2D.Dynamics.b2Fixture;	import Box2D.Dynamics.b2FixtureDef;		import EasyBox2D.EasyBox2D;
		/**	BoxObject is a subclass of {@link com.actionsnippet.qbox.QuickObject} and should only be instantiated with the {@link com.actionsnippet.qbox.QuickBox2D#addBox()} method.		@author Zevan Rosser	@version 1.0	*/	public class BoxObject extends BaseObject {				   		public function BoxObject(qbox:EasyBox2D, params:Object){			super(qbox, params);		}				override protected function defaultParams(p:Object):void{			 						 		}		 		override protected function build():void{			var p:Object = params;			//			if(p.skin is DisplayObject){//				_bodyDef.userData = p.skin;//				var t:Number = p.skin.rotation;//				 //				p.skin.rotation = 0;//				if (!p.width){//				  p.width = p.skin.width / 30;//				}//				if (!p.height){//				  p.height = p.skin.height / 30;//				}//				p.skin.rotation = t;//			}//			//			if (!p.width) p.width = 1;//			if (!p.height) p.height = 1;									_bodyDef = new b2BodyDef();						_bodyDef.position.Set(p.x, p.y);						_bodyDef.type = p.density?b2Body.b2_dynamicBody:b2Body.b2_staticBody;										_bodyDef.userData = p.userdata;														var boxShape:b2PolygonShape = new b2PolygonShape(); 			boxShape.SetAsBox(p.width/2, p.height/2);				_fixtureDef = new b2FixtureDef(); 				_fixtureDef.shape = boxShape;			_fixtureDef.density = p.density; 			_fixtureDef.friction = p.friction; 			_fixtureDef.restitution = p.restitution; 								var baseBody:b2Body = w.CreateBody(_bodyDef);				var fixture:b2Fixture = baseBody.CreateFixture(_fixtureDef); 						//			if (p.skin is Class){//			    bodyDef.userData = new p.skin();//				if (p.scaleSkin == true){//					bodyDef.userData.width=p.width * 30;//					bodyDef.userData.height=p.height * 30;//				}//			}else//		    if (p.skin is DisplayObject){//				//				bodyDef.userData = p.skin;//				bodyDef.userData.width=p.width * 30;//				bodyDef.userData.height=p.height * 30;//				bodyDef.position = new b2Vec2(2,2);//			}else if (p.skin != "none"){//				bodyDef.userData = new Sprite();//				with(bodyDef.userData.graphics){//					 //					lineStyle(p.lineThickness,p.lineColor, p.lineAlpha);//					beginFill(p.fillColor, p.fillAlpha);//					hw *= 30;//					hh *= 30;//					drawRect(-hw, -hh, p.width * 30, p.height * 30);//				}//				if (p.scaleSkin == true){//				  bodyDef.userData.width=p.width * 30;//			      bodyDef.userData.height=p.height * 30;//				}//			}					}	}}