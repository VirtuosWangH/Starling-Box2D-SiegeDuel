package editor.modes{		import flash.display.Sprite;	import flash.geom.Rectangle;		import editor.commonData.DrawingType;	import editor.commonData.Restrictions;	import editor.drawingObject.BaseObject;	import editor.drawingObject.BoxObject;	import editor.events.CommonEvent;	import editor.ui.NativeSprite;
		public class BoxMode extends BaseMode {	    private var _box:BaseObject;				public function BoxMode(){		}				override public function start(main:NativeSprite):void{						 trace("box start");			 _main = main;			 _box =  new BoxObject();			 if (Restrictions._isGridSnapping){				 _box.x = int(_main.mouseX / 10) * 10;				 _box.y = int(_main.mouseY / 10) * 10;			 }else{				 _box.x = _main.mouseX;				 _box.y = _main.mouseY;			 }			 			 _main.addChild(_box);			 _box.dispatchEvent(new CommonEvent(CommonEvent.START_CREATE,true));		}				override public function run():void{			 _box.graphics.clear();			 _box.graphics.lineStyle(0, 0x000000);			 _box.graphics.beginFill(0xCCCCCC);			 var dx:Number =  _main.mouseX - _box.x;			 var dy:Number =  _main.mouseY- _box.y;			 if (Restrictions._isGridSnapping){				  dx = int(dx / 10) * 10;				  dy = int(dy / 10) * 10;			 }			 if (Restrictions._isConstrainSquare){				dy = dx; 			 }			  _box.graphics.drawRect(0, 0, dx, dy);		}				 		override public function end():void{			trace("box end");			var w:Number = _box.width;			var h:Number = _box.height;			if (w == 0 || h == 0){				_box.parent.removeChild(_box);				return;			}			_box.shapeData.width = w;			_box.shapeData.height = h;			var b:Rectangle= _box.getRect(_box.parent);			var nx:Number = b.left + _box.width / 2;			var ny:Number = b.top + _box.height / 2;			 _box.graphics.clear();			 _box.graphics.lineStyle(0, 0x000000);			 _box.graphics.beginFill(0xCCCCCC);			 _box.graphics.drawRect(-w/2, -h/2, w, h);			 _box.x = nx;			 _box.y = ny;		}		 				override public function toString():String {			return DrawingType.BOX;		}		 	}}