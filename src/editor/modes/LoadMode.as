package editor.modes{		import flash.events.Event;	import flash.net.FileReference;		import editor.drawingObject.BaseObject;	import editor.drawingObject.BoxObject;	import editor.drawingObject.CircleObject;	import editor.drawingObject.JointObject;	import editor.drawingObject.PolyObject;	import editor.parsers.StringToObject;	import com.maccherone.json.JSON;	public class LoadMode implements IDrawMode {				protected var _main:Main;		private var file:FileReference;		private var _data:String;		public function LoadMode(main:Main){			_main = main;			file = new FileReference();			file.browse();			file.addEventListener(Event.SELECT, onSelected);		}		private function onSelected(evt:Event):void{			trace("SELECTED", file.name);			file.load();			file.addEventListener(Event.COMPLETE, onComplete);		}		private function onComplete(evt:Event):void {			_data = String(file.data);						var _tempObj:Object=com.maccherone.json.JSON.decode(_data);			parse();		}		private function parse():void{			var shape:BaseObject;			var lines:Array = new Array();			lines = _data.split(";");			for (var i:int = 0; i<lines.length; i++){				//trace(i, "-->", lines[i]);				// see if there is a variable name				var nameDef:String = "";				if (lines[i].indexOf("var")!=-1){					nameDef = lines[i].match(/var\s+[a-z, A-Z,0-9].+\:BaseObject/);					nameDef = nameDef.replace(/var\s+/, "");					nameDef = nameDef.replace(/\:BaseObject/, "");					trace(nameDef);				}								// get the object definition:				var objString:String = lines[i].match(/\{.*\}/);				// see if there are any box definitions and create BoxObject() instances accordinly				if (lines[i].indexOf("addBox") != -1){					shape = new BoxObject();				}else if (lines[i].indexOf("addCircle") != -1){					shape = new CircleObject();				}else if (lines[i].indexOf("addPoly") != -1){					shape = new PolyObject();				}else if (lines[i].indexOf("addJoint") != -1){					shape = new JointObject();				}				// tell the current shape instance to create itself				//trace("///////////");				if (objString != null){ 					shape.createFromObject(nameDef, StringToObject.parse(objString));					_main.addChild(shape);				}				//trace("!---------------");			}					}				public function start(app:Main):void{			trace("loadmode start");			}				public function run():void{			trace("loadmode run");		}				public function end():void{			trace("loadmode end");		}		public function reset():void{			trace("loadmode reset");		}		public function toString():String{			return "Default";		}		 	}}